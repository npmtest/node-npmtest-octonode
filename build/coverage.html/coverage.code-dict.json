{"/home/travis/build/npmtest/node-npmtest-octonode/test.js":"/* istanbul instrument in package npmtest_octonode */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-octonode/lib.npmtest_octonode.js":"/* istanbul instrument in package npmtest_octonode */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_octonode = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_octonode = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-octonode/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-octonode && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_octonode */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_octonode\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_octonode.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_octonode.rollup.js'] =\n            local.assetsDict['/assets.npmtest_octonode.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_octonode.__dirname + '/lib.npmtest_octonode.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var octonode;\n\n  octonode = module.exports = {\n    auth: require('./octonode/auth'),\n    client: require('./octonode/client'),\n    user: require('./octonode/user'),\n    repo: require('./octonode/repo'),\n    org: require('./octonode/org'),\n    pr: require('./octonode/pr'),\n    team: require('./octonode/team'),\n    release: require('./octonode/release'),\n    gist: require('./octonode/gist'),\n    search: require('./octonode/search'),\n    issue: require('./octonode/issue'),\n    project: require('./octonode/project'),\n    milestone: require('./octonode/milestone'),\n    label: require('./octonode/label'),\n    me: require('./octonode/me')\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/auth.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var auth, qs, randomstring, request, url;\n\n  request = require('request');\n\n  url = require('url');\n\n  qs = require('querystring');\n\n  randomstring = require('randomstring');\n\n  auth = module.exports = {\n    modes: {\n      cli: 0,\n      web: 1\n    },\n    config: function(options) {\n      var base, base1;\n      if (options.username && options.password) {\n        this.mode = this.modes.cli;\n      } else if (options.id && options.secret) {\n        this.mode = this.modes.web;\n      } else {\n        throw new Error('No working mode recognized');\n      }\n      this.options = options;\n      (base = this.options).apiUrl || (base.apiUrl = \"https://api.github.com\");\n      (base1 = this.options).webUrl || (base1.webUrl = \"https://github.com\");\n      return this;\n    },\n    revoke: function(id, callback) {\n      var options;\n      if (this.mode === this.modes.cli) {\n        options = {\n          url: url.parse(this.options.apiUrl + \"/authorizations/\" + id),\n          method: 'DELETE',\n          headers: {\n            'User-Agent': 'octonode/0.3 (https://github.com/pksunkara/octonode) terminal/0.0'\n          }\n        };\n        options.url.auth = this.options.username + \":\" + this.options.password;\n        return request(options, function(err, res, body) {\n          if ((err != null) || res.statusCode !== 204) {\n            return callback(err || new Error(JSON.parse(body).message));\n          } else {\n            return callback(null);\n          }\n        });\n      } else {\n        return callback(new Error('Cannot revoke authorization in web mode'));\n      }\n    },\n    login: function(scopes, callback) {\n      var options, uri;\n      if (this.mode === this.modes.cli) {\n        if (scopes instanceof Array) {\n          scopes = JSON.stringify({\n            scopes: scopes\n          });\n        } else {\n          scopes = JSON.stringify(scopes);\n        }\n        options = {\n          url: url.parse(this.options.apiUrl + \"/authorizations\"),\n          method: 'POST',\n          body: scopes,\n          headers: {\n            'Content-Type': 'application/json',\n            'User-Agent': 'octonode/0.3 (https://github.com/pksunkara/octonode) terminal/0.0'\n          }\n        };\n        options.url.auth = this.options.username + \":\" + this.options.password;\n        if (this.options.otp) {\n          options.headers['X-GitHub-OTP'] = this.options.otp;\n        }\n        return request(options, function(err, res, body) {\n          if (err != null) {\n            return callback(err);\n          } else {\n            try {\n              body = JSON.parse(body);\n            } catch (error) {\n              err = error;\n              callback(new Error('Unable to parse body'));\n            }\n            if (res.statusCode === 201) {\n              return callback(null, body.id, body.token);\n            } else {\n              return callback(new Error(body.message));\n            }\n          }\n        });\n      } else if (this.mode === this.modes.web) {\n        if (scopes instanceof Array) {\n          uri = this.options.webUrl + \"/login/oauth/authorize\";\n          uri += \"?client_id=\" + this.options.id;\n          uri += \"&state=\" + (randomstring.generate());\n          uri += \"&scope=\" + (scopes.join(','));\n          if (this.options.redirect_uri) {\n            uri += \"&redirect_uri=\" + this.options.redirect_uri;\n          }\n          return uri;\n        } else {\n          return request({\n            url: this.options.webUrl + \"/login/oauth/access_token\",\n            method: 'POST',\n            body: qs.stringify({\n              code: scopes,\n              client_id: this.options.id,\n              client_secret: this.options.secret\n            }),\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded',\n              'User-Agent': 'octonode/0.3 (https://github.com/pksunkara/octonode) terminal/0.0'\n            }\n          }, function(err, res, body) {\n            if (err != null) {\n              return callback(err);\n            } else if (res.statusCode === 404) {\n              return callback(new Error('Access token not found'));\n            } else {\n              body = qs.parse(body);\n              if (body.error) {\n                return callback(new Error(body.error));\n              } else {\n                return callback(null, body.access_token);\n              }\n            }\n          });\n        }\n      } else {\n        return callback(new Error('No working mode defined'));\n      }\n    }\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/client.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Client, Gist, HttpError, Issue, Label, Me, Milestone, Notification, Org, Pr, Release, Repo, Search, Team, User, extend, request, url,\n    extend1 = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    slice = [].slice;\n\n  request = require('request');\n\n  url = require('url');\n\n  Me = require('./me');\n\n  User = require('./user');\n\n  Repo = require('./repo');\n\n  Org = require('./org');\n\n  Gist = require('./gist');\n\n  Team = require('./team');\n\n  Pr = require('./pr');\n\n  Release = require('./release');\n\n  Issue = require('./issue');\n\n  Milestone = require('./milestone');\n\n  Label = require('./label');\n\n  Notification = require('./notification');\n\n  extend = require('deep-extend');\n\n  Search = require('./search');\n\n  HttpError = (function(superClass) {\n    extend1(HttpError, superClass);\n\n    function HttpError(message, statusCode, headers, body1) {\n      this.message = message;\n      this.statusCode = statusCode;\n      this.headers = headers;\n      this.body = body1;\n    }\n\n    return HttpError;\n\n  })(Error);\n\n  Client = (function() {\n    function Client(token1, options1) {\n      this.token = token1;\n      this.options = options1;\n      this.limit = bind(this.limit, this);\n      this.requestOptions = bind(this.requestOptions, this);\n      this.request = this.options && this.options.request || request;\n      this.requestDefaults = {\n        headers: {\n          'User-Agent': 'octonode/0.3 (https://github.com/pksunkara/octonode) terminal/0.0'\n        }\n      };\n      if (this.token && typeof this.token === 'string') {\n        this.requestDefaults.headers.Authorization = \"token \" + this.token;\n      }\n    }\n\n    Client.prototype.me = function() {\n      return new Me(this);\n    };\n\n    Client.prototype.user = function(name) {\n      return new User(name, this);\n    };\n\n    Client.prototype.repo = function(name) {\n      return new Repo(name, this);\n    };\n\n    Client.prototype.org = function(name) {\n      return new Org(name, this);\n    };\n\n    Client.prototype.gist = function() {\n      return new Gist(this);\n    };\n\n    Client.prototype.team = function(id) {\n      return new Team(id, this);\n    };\n\n    Client.prototype.pr = function(repo, number) {\n      return new Pr(repo, number, this);\n    };\n\n    Client.prototype.release = function(repo, number) {\n      return new Release(repo, number, this);\n    };\n\n    Client.prototype.search = function() {\n      return new Search(this);\n    };\n\n    Client.prototype.issue = function(repo, number) {\n      return new Issue(repo, number, this);\n    };\n\n    Client.prototype.project = function(repo, number) {\n      return new Project(repo, number, this);\n    };\n\n    Client.prototype.milestone = function(repo, number) {\n      return new Milestone(repo, number, this);\n    };\n\n    Client.prototype.label = function(repo, name) {\n      return new Label(repo, name, this);\n    };\n\n    Client.prototype.notification = function(id) {\n      return new Notification(id, this);\n    };\n\n    Client.prototype.requestOptions = function(params1, params2) {\n      return extend(this.requestDefaults, params1, params2);\n    };\n\n    Client.prototype.buildUrl = function(path, pageOrQuery, per_page, since) {\n      var _url, q, query, separator, urlFromPath;\n      if (path == null) {\n        path = '/';\n      }\n      if (pageOrQuery == null) {\n        pageOrQuery = null;\n      }\n      if (per_page == null) {\n        per_page = null;\n      }\n      if (since == null) {\n        since = null;\n      }\n      if ((pageOrQuery != null) && typeof pageOrQuery === 'object') {\n        query = pageOrQuery;\n      } else {\n        query = {};\n        if (pageOrQuery != null) {\n          if ((since != null) && since === true) {\n            query.since = pageOrQuery;\n          } else {\n            query.page = pageOrQuery;\n          }\n        }\n        if (per_page != null) {\n          query.per_page = per_page;\n        }\n      }\n      if (this.token && typeof this.token === 'object' && this.token.id) {\n        query.client_id = this.token.id;\n        query.client_secret = this.token.secret;\n      }\n      if (query.q) {\n        q = query.q;\n        delete query.q;\n        if (Object.keys(query).length) {\n          separator = '&';\n        } else {\n          separator = '?';\n        }\n      }\n      urlFromPath = url.parse(path);\n      _url = url.format({\n        protocol: urlFromPath.protocol || this.options && this.options.protocol || \"https:\",\n        auth: urlFromPath.auth || (this.token && this.token.username && this.token.password ? this.token.username + \":\" + this.token.password : ''),\n        hostname: urlFromPath.hostname || this.options && this.options.hostname || \"api.github.com\",\n        port: urlFromPath.port || this.options && this.options.port,\n        pathname: urlFromPath.pathname,\n        query: query\n      });\n      if (q) {\n        _url += separator + \"q=\" + q;\n        query.q = q;\n      }\n      return _url;\n    };\n\n    Client.prototype.errorHandle = function(res, body, callback) {\n      var err, ref;\n      if (Math.floor(res.statusCode / 100) === 5) {\n        return callback(new HttpError('Error ' + res.statusCode, res.statusCode, res.headers));\n      }\n      if (typeof body === 'string') {\n        try {\n          body = JSON.parse(body || '{}');\n        } catch (error) {\n          err = error;\n          return callback(err);\n        }\n      }\n      if (body.message && ((ref = res.statusCode) === 400 || ref === 401 || ref === 403 || ref === 404 || ref === 410 || ref === 422)) {\n        return callback(new HttpError(body.message, res.statusCode, res.headers, body));\n      }\n      return callback(null, res.statusCode, body, res.headers);\n    };\n\n    Client.prototype.get = function() {\n      var callback, i, params, path;\n      path = arguments[0], params = 3 <= arguments.length ? slice.call(arguments, 1, i = arguments.length - 1) : (i = 1, []), callback = arguments[i++];\n      return this.request(this.requestOptions({\n        uri: this.buildUrl.apply(this, [path].concat(slice.call(params))),\n        method: 'GET'\n      }), (function(_this) {\n        return function(err, res, body) {\n          if (err) {\n            return callback(err);\n          }\n          return _this.errorHandle(res, body, callback);\n        };\n      })(this));\n    };\n\n    Client.prototype.getNoFollow = function() {\n      var callback, i, params, path;\n      path = arguments[0], params = 3 <= arguments.length ? slice.call(arguments, 1, i = arguments.length - 1) : (i = 1, []), callback = arguments[i++];\n      return this.request(this.requestOptions({\n        uri: this.buildUrl.apply(this, [path].concat(slice.call(params))),\n        method: 'GET',\n        followRedirect: false\n      }), (function(_this) {\n        return function(err, res, body) {\n          if (err) {\n            return callback(err);\n          }\n          return _this.errorHandle(res, body, callback);\n        };\n      })(this));\n    };\n\n    Client.prototype.getOptions = function() {\n      var callback, i, options, params, path;\n      path = arguments[0], options = arguments[1], params = 4 <= arguments.length ? slice.call(arguments, 2, i = arguments.length - 1) : (i = 2, []), callback = arguments[i++];\n      return this.request(this.requestOptions({\n        uri: this.buildUrl.apply(this, [path].concat(slice.call(params))),\n        method: 'GET'\n      }, options), (function(_this) {\n        return function(err, res, body) {\n          if (err) {\n            return callback(err);\n          }\n          return _this.errorHandle(res, body, callback);\n        };\n      })(this));\n    };\n\n    Client.prototype.post = function(path, content, options, callback) {\n      var reqDefaultOption, reqOpt;\n      if ((callback == null) && typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      reqDefaultOption = {\n        uri: this.buildUrl(path, options.query),\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      if (content) {\n        reqDefaultOption.body = JSON.stringify(content);\n      }\n      reqOpt = this.requestOptions(extend(reqDefaultOption, options));\n      return this.request(reqOpt, (function(_this) {\n        return function(err, res, body) {\n          if (err) {\n            return callback(err);\n          }\n          return _this.errorHandle(res, body, callback);\n        };\n      })(this));\n    };\n\n    Client.prototype.patch = function(path, content, callback) {\n      return this.request(this.requestOptions({\n        uri: this.buildUrl(path),\n        method: 'PATCH',\n        body: JSON.stringify(content),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }), (function(_this) {\n        return function(err, res, body) {\n          if (err) {\n            return callback(err);\n          }\n          return _this.errorHandle(res, body, callback);\n        };\n      })(this));\n    };\n\n    Client.prototype.put = function(path, content, options, callback) {\n      if (!callback && options) {\n        callback = options;\n        options = {\n          'Content-Type': 'application/json'\n        };\n      }\n      return this.request(this.requestOptions({\n        uri: this.buildUrl(path),\n        method: 'PUT',\n        body: JSON.stringify(content),\n        headers: options\n      }), (function(_this) {\n        return function(err, res, body) {\n          if (err) {\n            return callback(err);\n          }\n          return _this.errorHandle(res, body, callback);\n        };\n      })(this));\n    };\n\n    Client.prototype.del = function(path, content, callback) {\n      return this.request(this.requestOptions({\n        uri: this.buildUrl(path),\n        method: 'DELETE',\n        body: JSON.stringify(content),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }), (function(_this) {\n        return function(err, res, body) {\n          if (err) {\n            return callback(err);\n          }\n          return _this.errorHandle(res, body, callback);\n        };\n      })(this));\n    };\n\n    Client.prototype.limit = function(callback) {\n      return this.get('/rate_limit', function(err, s, b) {\n        if (err) {\n          return callback(err);\n        }\n        if (s !== 200) {\n          return callback(new HttpError('Client rate_limit error', s));\n        } else {\n          return callback(null, b.resources.core.remaining, b.resources.core.limit, b.resources.core.reset, b);\n        }\n      });\n    };\n\n    return Client;\n\n  })();\n\n  module.exports = function() {\n    var credentials, token;\n    token = arguments[0], credentials = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Client, [token].concat(slice.call(credentials)), function(){});\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/me.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Me,\n    slice = [].slice;\n\n  Me = (function() {\n    function Me(client) {\n      this.client = client;\n    }\n\n    Me.prototype.profile = function(data) {\n      return Object.keys(data).forEach((function(_this) {\n        return function(e) {\n          return _this[e] = data[e];\n        };\n      })(this));\n    };\n\n    Me.prototype.info = function(cb) {\n      return this.client.get('/user', function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User info error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.update = function(info, cb) {\n      return this.client.post('/user', info, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User update error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.emails = function(cbOrEmails, cb) {\n      if ((cb != null) && typeof cbOrEmails !== 'function') {\n        return this.setEmails(cbOrEmails, cb);\n      } else if ((cb == null) && typeof cbOrEmails !== 'function') {\n        return this.deleteEmails(cbOrEmails);\n      } else {\n        cb = cbOrEmails;\n        return this.client.get('/user/emails', function(err, s, b, h) {\n          if (err) {\n            return cb(err);\n          }\n          if (s !== 200) {\n            return cb(new Error('User emails error'));\n          } else {\n            return cb(null, b, h);\n          }\n        });\n      }\n    };\n\n    Me.prototype.emailsDetailed = function(cb) {\n      return this.client.getOptions('/user/emails', {\n        headers: {\n          Accept: 'application/vnd.github.v3.full+json'\n        }\n      }, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User emails error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.setEmails = function(emails, cb) {\n      return this.client.post('/user/emails', emails, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error('User setEmails error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.deleteEmails = function(emails, cb) {\n      return this.client.del('/user/emails', emails, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"User deleteEmails error\"));\n        } else {\n          return cb(null);\n        }\n      });\n    };\n\n    Me.prototype.followers = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, ['/user/followers'].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User followers error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Me.prototype.following = function(cbOrUser, cb) {\n      if ((cb != null) && typeof cbOrUser !== 'function') {\n        return this.checkFollowing(cbOrUser, cb);\n      } else {\n        cb = cbOrUser;\n        return this.client.get('/user/following', function(err, s, b, h) {\n          if (err) {\n            return cb(err);\n          }\n          if (s !== 200) {\n            return cb(new Error('User following error'));\n          } else {\n            return cb(null, b, h);\n          }\n        });\n      }\n    };\n\n    Me.prototype.checkFollowing = function(user, cb) {\n      return this.client.get(\"/user/following/\" + user, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        return cb(null, s === 204, h);\n      });\n    };\n\n    Me.prototype.follow = function(user, cb) {\n      return this.client.put(\"/user/following/\" + user, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"User follow error\"));\n        } else {\n          return cb(null);\n        }\n      });\n    };\n\n    Me.prototype.unfollow = function(user, cb) {\n      return this.client.del(\"/user/following/\" + user, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"User unfollow error\"));\n        } else {\n          return cb(null);\n        }\n      });\n    };\n\n    Me.prototype.starred = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, ['/user/starred'].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User starred error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Me.prototype.checkStarred = function(repo, cb) {\n      return this.client.get(\"/user/starred/\" + repo, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        return cb(null, s === 204, h);\n      });\n    };\n\n    Me.prototype.star = function(repo, cb) {\n      return this.client.put(\"/user/starred/\" + repo, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"User star error\"));\n        } else {\n          return cb(null);\n        }\n      });\n    };\n\n    Me.prototype.unstar = function(repo, cb) {\n      return this.client.del(\"/user/starred/\" + repo, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"User unstar error\"));\n        } else {\n          return cb(null);\n        }\n      });\n    };\n\n    Me.prototype.watched = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, ['/user/subscriptions'].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User subscription error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Me.prototype.keys = function(cbOrIdOrKey, cbOrKey, cb) {\n      if ((cb == null) && typeof cbOrIdOrKey === 'number' && typeof cbOrKey === 'function') {\n        return this.getKey(cbOrIdOrKey, cbOrKey);\n      } else if ((cbOrKey == null) && (cb == null) && typeof cbOrIdOrKey === 'number') {\n        return this.deleteKey(cbOrIdOrKey);\n      } else if ((cb == null) && typeof cbOrKey === 'function' && typeof cbOrIdOrKey === 'object') {\n        return this.createKey(cbOrIdOrKey, cbOrKey);\n      } else if (typeof cb === 'function' && typeof cbOrIdOrKey === 'number' && typeof cbOrKey('object')) {\n        return this.updateKey(cbOrIdOrKey, cbOrKey, cb);\n      } else {\n        cb = cbOrIdOrKey;\n        return this.client.get('/user/keys', function(err, s, b, h) {\n          if (err) {\n            return cb(err);\n          }\n          if (s !== 200) {\n            return cb(new Error('User keys error'));\n          } else {\n            return cb(null, b, h);\n          }\n        });\n      }\n    };\n\n    Me.prototype.getKey = function(id, cb) {\n      return this.client.get(\"/user/keys/\" + id, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User getKey error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.createKey = function(key, cb) {\n      return this.client.post('/user/keys', key, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error('User createKey error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.updateKey = function(id, key, cb) {\n      return this.client.post(\"/user/keys/\" + id, key, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User updateKey error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.deleteKey = function(id, cb) {\n      return this.client.del(\"/user/keys/\" + id, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"User deleteKey error\"));\n        } else {\n          return cb(null);\n        }\n      });\n    };\n\n    Me.prototype.org = function(name) {\n      return this.client.org(name);\n    };\n\n    Me.prototype.orgs = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/user/orgs\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User orgs error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Me.prototype.updateMembership = function(org, state, cb) {\n      var info;\n      info = {\n        state: state\n      };\n      return this.client.patch(\"/user/memberships/orgs/\" + org, info, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User org update error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.repo = function(nameOrRepo, cb) {\n      if (typeof cb === 'function' && typeof nameOrRepo === 'object') {\n        return this.createRepo(nameOrRepo, cb);\n      } else {\n        return this.client.repo(nameOrRepo);\n      }\n    };\n\n    Me.prototype.repos = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/user/repos\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User repos error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Me.prototype.createRepo = function(repo, cb) {\n      return this.client.post(\"/user/repos\", repo, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error('User createRepo error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.fork = function(repo, cb) {\n      return this.client.post(\"/repos/\" + repo + \"/forks\", {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 202) {\n          return cb(new Error('User fork error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.pr = function(repo, number) {\n      return this.client.pr(repo, number);\n    };\n\n    Me.prototype.notifications = function(options, cb) {\n      if (options == null) {\n        options = {};\n      }\n      return this.client.get(\"/notifications\", options, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User notification error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.checkWatching = function(repo, cb) {\n      return this.client.get(\"/repos/\" + repo + \"/subscription\", function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s === 200) {\n          return cb(null, b, h);\n        } else {\n          return cb(null, false, h);\n        }\n      });\n    };\n\n    Me.prototype.subscribe = function(repo, cb) {\n      var options;\n      options = {\n        subscribed: true,\n        ignored: false\n      };\n      return this.client.put(\"/repos/\" + repo + \"/subscription\", options, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User subscribe error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.unsubscribe = function(repo, cb) {\n      return this.client.del(\"/repos/\" + repo + \"/subscription\", function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error('User unsubscribe error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Me.prototype.issues = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/user/issues\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"User issues error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Me.prototype.teams = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/user/teams\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"User teams error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    return Me;\n\n  })();\n\n  module.exports = Me;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/user.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var User,\n    slice = [].slice;\n\n  User = (function() {\n    function User(login, client) {\n      this.login = login;\n      this.client = client;\n    }\n\n    User.prototype.profile = function(data) {\n      return Object.keys(data).forEach((function(_this) {\n        return function(e) {\n          return _this[e] = data[e];\n        };\n      })(this));\n    };\n\n    User.prototype.info = function(cb) {\n      return this.client.get(\"/users/\" + this.login, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User info error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    User.prototype.followers = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/users/\" + this.login + \"/followers\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User followers error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    User.prototype.following = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/users/\" + this.login + \"/following\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User following error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    User.prototype.repos = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/users/\" + this.login + \"/repos\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User repos error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    User.prototype.events = function() {\n      var cb, events, i, params, ref;\n      params = 3 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 2) : (i = 0, []), events = arguments[i++], cb = arguments[i++];\n      if (!cb && typeof events === 'function') {\n        cb = events;\n        events = null;\n      } else if (events != null) {\n        if (typeof events === 'number' && params.length > 0) {\n          params[1] = events;\n          events = null;\n        } else if (!Array.isArray(events)) {\n          events = [events];\n        }\n      }\n      return (ref = this.client).get.apply(ref, [\"/users/\" + this.login + \"/events\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User events error'));\n        }\n        if (events != null) {\n          b = b.filter(function(event) {\n            return events.indexOf(event.type) !== -1;\n          });\n        }\n        return cb(null, b, h);\n      }]));\n    };\n\n    User.prototype.orgs = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/users/\" + this.login + \"/orgs\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User organizations error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    return User;\n\n  })();\n\n  module.exports = User;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/repo.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Repo,\n    slice = [].slice;\n\n  Repo = (function() {\n    function Repo(name, client) {\n      this.name = name;\n      this.client = client;\n    }\n\n    Repo.prototype.info = function(cb) {\n      return this.client.get(\"/repos/\" + this.name, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo info error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.update = function(info, cb) {\n      return this.client.patch(\"/repos/\" + this.name, info, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo update error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.collaborators = function(cbParamOrUser, cb) {\n      var param;\n      if ((cb != null) && typeof cbParamOrUser !== 'function' && typeof cbParamOrUser !== 'object') {\n        return this.hasCollaborator(cbParamOrUser, cb);\n      } else {\n        if (cb) {\n          param = cbParamOrUser;\n        } else {\n          cb = cbParamOrUser;\n          param = {};\n        }\n        return this.client.getOptions(\"/repos/\" + this.name + \"/collaborators\", {\n          headers: {\n            Accept: 'application/vnd.github.ironman-preview+json'\n          }\n        }, param, function(err, s, b, h) {\n          if (err) {\n            return cb(err);\n          }\n          if (s !== 200) {\n            return cb(new Error(\"Repo collaborators error\"));\n          } else {\n            return cb(null, b, h);\n          }\n        });\n      }\n    };\n\n    Repo.prototype.addCollaborator = function(user, cbOrOptions, cb) {\n      var param;\n      if ((cb == null) && cbOrOptions) {\n        cb = cbOrOptions;\n        param = {};\n      } else if (typeof cbOrOptions === 'object') {\n        param = cbOrOptions;\n      }\n      return this.client.put(\"/repos/\" + this.name + \"/collaborators/\" + user, param, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Repo addCollaborator error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.removeCollaborator = function(user, cb) {\n      return this.client.del(\"/repos/\" + this.name + \"/collaborators/\" + user, null, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Repo removeCollaborator error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.hasCollaborator = function(user, cb) {\n      return this.client.get(\"repos/\" + this.name + \"/collaborators/\" + user, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        return cb(null, s === 204, h);\n      });\n    };\n\n    Repo.prototype.commits = function() {\n      var cb, i, params, ref1;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref1 = this.client).get.apply(ref1, [\"/repos/\" + this.name + \"/commits\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo commits error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Repo.prototype.commit = function(sha, cb) {\n      return this.client.get(\"/repos/\" + this.name + \"/commits/\" + sha, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo commits error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.compare = function(base, head, cb) {\n      return this.client.get(\"/repos/\" + this.name + \"/compare/\" + base + \"...\" + head, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo compare error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.createCommit = function(message, tree, parents, cbOrOptions, cb) {\n      var param;\n      if ((cb == null) && cbOrOptions) {\n        cb = cbOrOptions;\n        param = {\n          message: message,\n          parents: parents,\n          tree: tree\n        };\n      } else if (typeof cbOrOptions === 'object') {\n        param = cbOrOptions;\n        param['message'] = message;\n        param['parents'] = parents;\n        param['tree'] = tree;\n      }\n      return this.client.post(\"/repos/\" + this.name + \"/git/commits\", param, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createCommit error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.tags = function(cb) {\n      return this.client.get(\"/repos/\" + this.name + \"/tags\", function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo tags error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.releases = function(cb) {\n      return this.client.get(\"/repos/\" + this.name + \"/releases\", function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo releases error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.release = function(numberOrRelease, cb) {\n      if (typeof cb === 'function' && typeof numberOrRelease === 'object') {\n        return this.createRelease(numberOrRelease, cb);\n      } else {\n        return this.client.release(this.name, numberOrRelease);\n      }\n    };\n\n    Repo.prototype.createRelease = function(release, cb) {\n      return this.client.post(\"/repos/\" + this.name + \"/releases\", release, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createRelease error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.languages = function(cb) {\n      return this.client.get(\"/repos/\" + this.name + \"/languages\", function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo languages error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.contributors = function() {\n      var cb, i, params, ref1;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref1 = this.client).get.apply(ref1, [\"/repos/\" + this.name + \"/contributors\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo contributors error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Repo.prototype.contributorsStats = function(cb) {\n      return this.client.get(\"/repos/\" + this.name + \"/stats/contributors\", function(err, s, b, h) {\n        var error;\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          error = new Error(\"Repo stats contributors error\");\n          error.status = s;\n          return cb(error);\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.teams = function(cb) {\n      return this.client.get(\"/repos/\" + this.name + \"/teams\", function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo teams error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.branches = function() {\n      var cb, i, params, ref1;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref1 = this.client).get.apply(ref1, [\"/repos/\" + this.name + \"/branches\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo branches error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Repo.prototype.branch = function(branch, cb) {\n      return this.client.get(\"/repos/\" + this.name + \"/branches/\" + branch, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo branch error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.createReference = function(ref, sha, cb) {\n      return this.client.post(\"/repos/\" + this.name + \"/git/refs\", {\n        ref: \"refs/heads/\" + ref,\n        sha: sha\n      }, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createReference error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.issue = function(numberOrIssue, cb) {\n      if (typeof cb === 'function' && typeof numberOrIssue === 'object') {\n        return this.createIssue(numberOrIssue, cb);\n      } else {\n        return this.client.issue(this.name, numberOrIssue);\n      }\n    };\n\n    Repo.prototype.issues = function() {\n      var cb, i, params, ref1;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref1 = this.client).get.apply(ref1, [\"/repos/\" + this.name + \"/issues\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo issues error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Repo.prototype.createIssue = function(issue, cb) {\n      return this.client.post(\"/repos/\" + this.name + \"/issues\", issue, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createIssue error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.project = function(numberOrProject, cb) {\n      if (typeof cb === 'function' && typeof numberOrProject === 'object') {\n        return this.createProject(numberOrProject, cb);\n      } else {\n        return this.client.project(this.name, numberOrProject);\n      }\n    };\n\n    Repo.prototype.projects = function() {\n      var cb, i, params, ref1;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref1 = this.client).get.apply(ref1, [\"/repos/\" + this.name + \"/projects\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo projects error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Repo.prototype.createProject = function(project, cb) {\n      return this.client.post(\"/repos/\" + this.name + \"/projects\", project, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createProject error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.milestone = function(numberOrMilestone, cb) {\n      if (typeof cb === 'function' && typeof numberOrMilestone === 'object') {\n        return this.createMilestone(numberOrMilestone, cb);\n      } else {\n        return this.client.milestone(this.name, numberOrMilestone);\n      }\n    };\n\n    Repo.prototype.milestones = function() {\n      var cb, i, params, ref1;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref1 = this.client).get.apply(ref1, [\"/repos/\" + this.name + \"/milestones\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo milestones error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Repo.prototype.createMilestone = function(milestone, cb) {\n      return this.client.post(\"/repos/\" + this.name + \"/milestones\", milestone, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createMilestone error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.label = function(nameOrLabel, cb) {\n      if (typeof cb === 'function' && typeof nameOrLabel === 'object') {\n        return this.createLabel(nameOrLabel, cb);\n      } else {\n        return this.client.label(this.name, nameOrLabel);\n      }\n    };\n\n    Repo.prototype.labels = function() {\n      var cb, i, params, ref1;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref1 = this.client).get.apply(ref1, [\"/repos/\" + this.name + \"/labels\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo labels error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Repo.prototype.createLabel = function(label, cb) {\n      return this.client.post(\"/repos/\" + this.name + \"/labels\", label, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createLabel error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.readme = function(cbOrRef, cb) {\n      if ((cb == null) && cbOrRef) {\n        cb = cbOrRef;\n        cbOrRef = null;\n      }\n      if (cbOrRef) {\n        cbOrRef = {\n          ref: cbOrRef\n        };\n      }\n      return this.client.get(\"/repos/\" + this.name + \"/readme\", cbOrRef, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo readme error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.contents = function(path, cbOrRef, cb) {\n      if ((cb == null) && cbOrRef) {\n        cb = cbOrRef;\n        cbOrRef = null;\n      }\n      if (cbOrRef) {\n        cbOrRef = {\n          ref: cbOrRef\n        };\n      }\n      return this.client.get(\"/repos/\" + this.name + \"/contents/\" + path, cbOrRef, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo contents error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.createContents = function(path, message, content, cbOrBranchOrOptions, cb) {\n      var param;\n      content = new Buffer(content).toString('base64');\n      if ((cb == null) && cbOrBranchOrOptions) {\n        cb = cbOrBranchOrOptions;\n        cbOrBranchOrOptions = 'master';\n      }\n      if (typeof cbOrBranchOrOptions === 'string') {\n        param = {\n          branch: cbOrBranchOrOptions,\n          message: message,\n          content: content\n        };\n      } else if (typeof cbOrBranchOrOptions === 'object') {\n        param = cbOrBranchOrOptions;\n        param['message'] = message;\n        param['content'] = content;\n      }\n      return this.client.put(\"/repos/\" + this.name + \"/contents/\" + path, param, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createContents error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.updateContents = function(path, message, content, sha, cbOrBranch, cb) {\n      if ((cb == null) && cbOrBranch) {\n        cb = cbOrBranch;\n        cbOrBranch = 'master';\n      }\n      return this.client.put(\"/repos/\" + this.name + \"/contents/\" + path, {\n        branch: cbOrBranch,\n        message: message,\n        content: new Buffer(content).toString('base64'),\n        sha: sha\n      }, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo updateContents error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.deleteContents = function(path, message, sha, cbOrBranch, cb) {\n      if ((cb == null) && cbOrBranch) {\n        cb = cbOrBranch;\n        cbOrBranch = 'master';\n      }\n      return this.client.del(\"/repos/\" + this.name + \"/contents/\" + path, {\n        branch: cbOrBranch,\n        message: message,\n        sha: sha\n      }, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo deleteContents error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.archive = function(format, cbOrRef, cb) {\n      if ((cb == null) && cbOrRef) {\n        cb = cbOrRef;\n        cbOrRef = 'master';\n      }\n      return this.client.getNoFollow(\"/repos/\" + this.name + \"/\" + format + \"/\" + cbOrRef, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 302) {\n          return cb(new Error(\"Repo archive error\"));\n        } else {\n          return cb(null, h['location'], h);\n        }\n      });\n    };\n\n    Repo.prototype.forks = function() {\n      var cb, i, params, ref1;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref1 = this.client).get.apply(ref1, [\"/repos/\" + this.name + \"/forks\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo forks error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Repo.prototype.blob = function(sha, cb) {\n      return this.client.get(\"/repos/\" + this.name + \"/git/blobs/\" + sha, {\n        Accept: 'application/vnd.github.raw'\n      }, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo blob error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.createBlob = function(content, encoding, cb) {\n      return this.client.post(\"/repos/\" + this.name + \"/git/blobs\", {\n        content: content,\n        encoding: encoding\n      }, function(err, s, b) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createBlob error\"));\n        } else {\n          return cb(null, b);\n        }\n      });\n    };\n\n    Repo.prototype.tree = function(sha, cbOrRecursive, cb) {\n      var param;\n      if ((cb == null) && cbOrRecursive) {\n        cb = cbOrRecursive;\n        cbOrRecursive = false;\n      }\n      if (cbOrRecursive) {\n        param = {\n          recursive: 1\n        };\n      }\n      return this.client.get(\"/repos/\" + this.name + \"/git/trees/\" + sha, param, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo tree error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.createTree = function(tree, cbOrBase, cb) {\n      if ((cb == null) && cbOrBase) {\n        cb = cbOrBase;\n        cbOrBase = null;\n      }\n      return this.client.post(\"/repos/\" + this.name + \"/git/trees\", {\n        tree: tree,\n        base_tree: cbOrBase\n      }, function(err, s, b) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createTree error\"));\n        } else {\n          return cb(null, b);\n        }\n      });\n    };\n\n    Repo.prototype.ref = function(ref, cb) {\n      return this.client.get(\"/repos/\" + this.name + \"/git/refs/\" + ref, function(err, s, b) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo ref error\"));\n        } else {\n          return cb(null, b);\n        }\n      });\n    };\n\n    Repo.prototype.createRef = function(ref, sha, cb) {\n      return this.client.post(\"/repos/\" + this.name + \"/git/refs\", {\n        ref: ref,\n        sha: sha\n      }, function(err, s, b) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createRef error\"));\n        } else {\n          return cb(null, b);\n        }\n      });\n    };\n\n    Repo.prototype.updateRef = function(ref, sha, cb) {\n      return this.client.post(\"/repos/\" + this.name + \"/git/refs/\" + ref, {\n        sha: sha\n      }, function(err, s, b) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo updateRef error\"));\n        } else {\n          return cb(null, b);\n        }\n      });\n    };\n\n    Repo.prototype.destroy = function(cb) {\n      return this.client.del(\"/repos/\" + this.name, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Repo destroy error\"));\n        } else {\n          return cb(null);\n        }\n      });\n    };\n\n    Repo.prototype.pr = function(numberOrPr, cb) {\n      if (typeof cb === 'function' && typeof numberOrPr === 'object') {\n        return this.createPr(numberOrPr, cb);\n      } else {\n        return this.client.pr(this.name, numberOrPr);\n      }\n    };\n\n    Repo.prototype.prs = function() {\n      var cb, i, params, ref1;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref1 = this.client).get.apply(ref1, [\"/repos/\" + this.name + \"/pulls\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo prs error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Repo.prototype.createPr = function(pr, cb) {\n      return this.client.post(\"/repos/\" + this.name + \"/pulls\", pr, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createPr error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.hooks = function() {\n      var cb, i, params, ref1;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref1 = this.client).get.apply(ref1, [\"/repos/\" + this.name + \"/hooks\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo hooks error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Repo.prototype.hook = function(hook, cb) {\n      return this.client.post(\"/repos/\" + this.name + \"/hooks\", hook, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo createHook error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.deleteHook = function(id, cb) {\n      return this.client.del(\"/repos/\" + this.name + \"/hooks/\" + id, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Repo deleteHook error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.statuses = function(ref, cb) {\n      return this.client.get(\"/repos/\" + this.name + \"/statuses/\" + ref, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo statuses error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.status = function(sha, obj, cb) {\n      return this.client.post(\"/repos/\" + this.name + \"/statuses/\" + sha, obj, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Repo status error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Repo.prototype.stargazers = function() {\n      var cb, i, params, ref1;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref1 = this.client).get.apply(ref1, [\"/repos/\" + this.name + \"/stargazers\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Repo stargazers error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    return Repo;\n\n  })();\n\n  module.exports = Repo;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/org.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Org,\n    slice = [].slice;\n\n  Org = (function() {\n    function Org(name, client) {\n      this.name = name;\n      this.client = client;\n    }\n\n    Org.prototype.info = function(cb) {\n      return this.client.get(\"/orgs/\" + this.name, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Org info error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Org.prototype.update = function(info, cb) {\n      return this.client.post(\"/orgs/\" + this.name, info, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Org update error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Org.prototype.repo = function(nameOrRepo, cb) {\n      if (typeof cb === 'function' && typeof nameOrRepo === 'object') {\n        return this.createRepo(nameOrRepo, cb);\n      } else {\n        return this.client.repo(this.name + \"/\" + nameOrRepo);\n      }\n    };\n\n    Org.prototype.repos = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/orgs/\" + this.name + \"/repos\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Org repos error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Org.prototype.createRepo = function(repo, cb) {\n      return this.client.post(\"/orgs/\" + this.name + \"/repos\", repo, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error('Org createRepo error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Org.prototype.teams = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/orgs/\" + this.name + \"/teams\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Org teams error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Org.prototype.members = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/orgs/\" + this.name + \"/members\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Org members error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Org.prototype.membership = function(user, cb) {\n      return this.client.getOptions(\"/orgs/\" + this.name + \"/memberships/\" + user, {\n        headers: {\n          Accept: 'application/vnd.github.moondragon+json'\n        }\n      }, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Org memberships error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Org.prototype.member = function(user, cb) {\n      return this.client.getNoFollow(\"/orgs/\" + this.name + \"/members/\" + user, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        return cb(null, s === 204, h);\n      });\n    };\n\n    Org.prototype.publicMember = function(user, cb) {\n      return this.client.getNoFollow(\"/orgs/\" + this.name + \"/public_members/\" + user, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        return cb(null, s === 204, h);\n      });\n    };\n\n    Org.prototype.publicizeMembership = function(user, cb) {\n      return this.client.put(\"/orgs/\" + this.name + \"/public_members/\" + user, null, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Org publicizeMembership error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Org.prototype.concealMembership = function(user, cb) {\n      return this.client.del(\"/orgs/\" + this.name + \"/public_members/\" + user, null, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Org concealMembership error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Org.prototype.addMember = function(user, options, cb) {\n      return this.client.put(\"/orgs/\" + this.name + \"/memberships/\" + user, options, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Org addMember error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Org.prototype.removeMember = function(user, cb) {\n      return this.client.del(\"/orgs/\" + this.name + \"/members/\" + user, null, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Org removeMember error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Org.prototype.createTeam = function(options, cb) {\n      return this.client.post(\"/orgs/\" + this.name + \"/teams\", options, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error('Org createTeam error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Org.prototype.addTeamRepo = function(team, repo, cbOrOptions, cb) {\n      var options, param;\n      if ((cb == null) && cbOrOptions) {\n        cb = cbOrOptions;\n        param = {};\n        options = {\n          'Content-Type': 'application/json'\n        };\n      } else if (typeof cbOrOptions === 'object') {\n        param = cbOrOptions;\n        options = {\n          'Content-Type': 'application/json',\n          'Accept': 'application/vnd.github.ironman-preview+json'\n        };\n      }\n      return this.client.put(\"/teams/\" + team + \"/repos/\" + this.name + \"/\" + repo, param, options, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error('Org addTeamRepo error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Org.prototype.hooks = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/orgs/\" + this.name + \"/hooks\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Org hooks error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Org.prototype.hook = function(hook, cb) {\n      return this.client.post(\"/orgs/\" + this.name + \"/hooks\", hook, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Org createHook error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Org.prototype.deleteHook = function(id, cb) {\n      return this.client.del(\"/orgs/\" + this.name + \"/hooks/\" + id, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Org deleteHook error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    return Org;\n\n  })();\n\n  module.exports = Org;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/gist.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Gist,\n    slice = [].slice;\n\n  Gist = (function() {\n    function Gist(client) {\n      this.client = client;\n    }\n\n    Gist.prototype.list = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/gists\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Gist list error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Gist.prototype[\"public\"] = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/gists/public\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Gist public error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Gist.prototype.starred = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/gists/starred\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Gist starred error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Gist.prototype.user = function() {\n      var cb, i, params, ref, user;\n      params = 3 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 2) : (i = 0, []), user = arguments[i++], cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/users/\" + user + \"/gists\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Gist user error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Gist.prototype.get = function(id, cb) {\n      return this.client.get(\"/gists/\" + id, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Gist get error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Gist.prototype.create = function(gist, cb) {\n      return this.client.post(\"/gists\", gist, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error('Gist create error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Gist.prototype.edit = function(id, gist, cb) {\n      return this.client.post(\"/gists/\" + id, gist, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Gist edit error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Gist.prototype[\"delete\"] = function(id, cb) {\n      return this.client.del(\"/gists/\" + id, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Gist delete error\"));\n        } else {\n          return cb(null);\n        }\n      });\n    };\n\n    Gist.prototype.fork = function(id) {\n      return this.client.post(\"/gists/\" + id + \"/forks\", {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error('Gist fork error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Gist.prototype.star = function(id, cb) {\n      return this.client.put(\"/gists/\" + id + \"/star\", {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Gist star error\"));\n        } else {\n          return cb(null);\n        }\n      });\n    };\n\n    Gist.prototype.unstar = function(id, cb) {\n      return this.client.del(\"/gists/\" + id + \"/unstar\", {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Gist unstar error\"));\n        } else {\n          return cb(null);\n        }\n      });\n    };\n\n    Gist.prototype.check = function(id, cb) {\n      return this.client.get(\"/gists/\" + id + \"/star\", function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        return cb(null, s === 204, h);\n      });\n    };\n\n    Gist.prototype.listComments = function(id, cb) {\n      return this.client.get(\"/gists/\" + id + \"/comments\", function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Gist comments error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Gist.prototype.getComment = function(id, cb) {\n      return this.client.get(\"/gists/comments/\" + id, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Gist getComment error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Gist.prototype.createComment = function(id, comment, cb) {\n      return this.client.post(\"/gists/\" + id + \"/comments\", comment, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error('Gist createComment error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Gist.prototype.updateComment = function(id, comment, cb) {\n      return this.client.post(\"/gists/comments/\" + id, comment, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Gist updateComment error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Gist.prototype.deleteComment = function(id, cb) {\n      return this.client.del(\"/gists/comments/\" + id, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Gist deleteComment error\"));\n        } else {\n          return cb(null);\n        }\n      });\n    };\n\n    Gist.prototype.comments = function(id, cbOrCmnt, cb) {\n      if ((cb == null) && typeof cbOrCmnt === 'function') {\n        return this.listComments(id, cbOrCmnt);\n      } else {\n        return this.createComment(id, cbOrCmnt, cb);\n      }\n    };\n\n    Gist.prototype.comment = function(cbOrIdOrCmnt, cbOrCmnt, cb) {\n      if ((cb == null) && typeof cbOrIdOrCmnt === 'number' && typeof cbOrCmnt === 'function') {\n        return this.getComment(cbOrIdOrCmnt, cbOrCmnt);\n      } else if ((cbOrCmnt == null) && (cb == null) && typeof cbOrIdOrCmnt === 'number') {\n        return this.deleteComment(cbOrIdOrCmnt);\n      } else if (typeof cb === 'function' && typeof cbOrIdOrCmnt === 'number' && typeof cbOrCmnt('object')) {\n        return this.updateComment(cbOrIdOrCmnt, cbOrCmnt, cb);\n      } else {\n        return cbOrIdOrCmnt(new Error('Gist comment error'));\n      }\n    };\n\n    return Gist;\n\n  })();\n\n  module.exports = Gist;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/team.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Team,\n    slice = [].slice;\n\n  Team = (function() {\n    function Team(id, client) {\n      this.id = id;\n      this.client = client;\n    }\n\n    Team.prototype.info = function(cb) {\n      return this.client.get(\"/teams/\" + this.id, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Team info error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Team.prototype.update = function(info, cb) {\n      return this.client.patch(\"/teams/\" + this.id, info, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Team update error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Team.prototype.members = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).getOptions.apply(ref, [\"/teams/\" + this.id + \"/members\", {\n        headers: {\n          Accept: 'application/vnd.github.ironman-preview+json'\n        }\n      }].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Team members error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Team.prototype.member = function(user, cb) {\n      return this.client.get(\"/teams/\" + this.id + \"/members/\" + user, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        return cb(null, s === 204, h);\n      });\n    };\n\n    Team.prototype.addUser = function(user, cb) {\n      return this.client.put(\"/teams/\" + this.id + \"/members/\" + user, null, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Team addUser error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Team.prototype.removeUser = function(user, cb) {\n      return this.client.del(\"/teams/\" + this.id + \"/members/\" + user, null, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Team removeUser error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Team.prototype.membership = function(user, cb) {\n      return this.client.get(\"/teams/\" + this.id + \"/memberships/\" + user, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        return cb(null, s === 204 || s === 200, h);\n      });\n    };\n\n    Team.prototype.getMembership = function(user, cb) {\n      return this.client.get(\"/teams/\" + this.id + \"/memberships/\" + user, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Team getMembership error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Team.prototype.addMembership = function(user, cbOrOptions, cb) {\n      var param;\n      if ((cb == null) && cbOrOptions) {\n        cb = cbOrOptions;\n        param = {};\n      } else if (typeof cbOrOptions === 'object') {\n        param = cbOrOptions;\n      }\n      return this.client.put(\"/teams/\" + this.id + \"/memberships/\" + user, param, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Team membership error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Team.prototype.removeMembership = function(user, cb) {\n      return this.client.del(\"/teams/\" + this.id + \"/memberships/\" + user, null, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Team removeMembership error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Team.prototype.repos = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/teams/\" + this.id + \"/repos\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Team repos error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Team.prototype.removeRepo = function(repo, cb) {\n      return this.client.del(\"/teams/\" + this.id + \"/repos/\" + repo, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Team removeRepo error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Team.prototype.destroy = function(cb) {\n      return this.client.del(\"/teams/\" + this.id, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Team destroy error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    return Team;\n\n  })();\n\n  module.exports = Team;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/pr.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Pr;\n\n  Pr = (function() {\n    function Pr(repo, number, client) {\n      this.repo = repo;\n      this.number = number;\n      this.client = client;\n    }\n\n    Pr.prototype.info = function(cb) {\n      return this.client.get(\"/repos/\" + this.repo + \"/pulls/\" + this.number, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Pr info error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Pr.prototype.update = function(obj, cb) {\n      return this.client.post(\"/repos/\" + this.repo + \"/pulls/\" + this.number, obj, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Pr update error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Pr.prototype.close = function(cb) {\n      return this.update({\n        state: 'closed'\n      }, cb);\n    };\n\n    Pr.prototype.merged = function(cb) {\n      return this.client.get(\"/repos/\" + this.repo + \"/pulls/\" + this.number + \"/merge\", function(err, s, b, h) {\n        if (err && err.message === 'null') {\n          return cb(null, false);\n        }\n        return cb(null, s === 204, h);\n      });\n    };\n\n    Pr.prototype.merge = function(msg, cb) {\n      var commit;\n      commit = {\n        commit_message: msg\n      };\n      return this.client.put(\"/repos/\" + this.repo + \"/pulls/\" + this.number + \"/merge\", commit, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Pr merge error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Pr.prototype.commits = function(cb) {\n      return this.client.get(\"/repos/\" + this.repo + \"/pulls/\" + this.number + \"/commits\", function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Pr commits error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Pr.prototype.comments = function(cb) {\n      return this.client.get(\"/repos/\" + this.repo + \"/pulls/\" + this.number + \"/comments\", function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Pr comments error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Pr.prototype.createComment = function(comment, cb) {\n      return this.client.post(\"/repos/\" + this.repo + \"/pulls/\" + this.number + \"/comments\", comment, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Pr createComment error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Pr.prototype.removeComment = function(id, cb) {\n      return this.client.del(\"/repos/\" + this.repo + \"/pulls/\" + this.number + \"/comments/\" + id, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Pr removeComment error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Pr.prototype.files = function(cb) {\n      return this.client.get(\"/repos/\" + this.repo + \"/pulls/\" + this.number + \"/files\", function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Pr files error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    return Pr;\n\n  })();\n\n  module.exports = Pr;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/release.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Release;\n\n  Release = (function() {\n    function Release(repo, number, client) {\n      this.repo = repo;\n      this.number = number;\n      this.client = client;\n    }\n\n    Release.prototype.info = function(cb) {\n      return this.client.get(\"/repos/\" + this.repo + \"/releases/\" + this.number, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Release info error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Release.prototype.uploadAssets = function(file, optionsOrCb, cb) {\n      var options, uploadHost;\n      if ((cb == null) && typeof optionsOrCb === 'function') {\n        cb = optionsOrCb;\n        optionsOrCb = {};\n      }\n      options = {\n        query: {\n          name: optionsOrCb.name || 'archive.zip'\n        },\n        body: file,\n        headers: {\n          'Content-Type': optionsOrCb.contentType || 'application/zip'\n        }\n      };\n      uploadHost = optionsOrCb.uploadHost || 'uploads.github.com';\n      return this.client.post(\"https://\" + uploadHost + \"/repos/\" + this.repo + \"/releases/\" + this.number + \"/assets\", null, options, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error(\"Release assets error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    return Release;\n\n  })();\n\n  module.exports = Release;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/issue.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Issue,\n    slice = [].slice;\n\n  Issue = (function() {\n    function Issue(repo, number, client) {\n      this.repo = repo;\n      this.number = number;\n      this.client = client;\n    }\n\n    Issue.prototype.info = function(cb) {\n      return this.client.get(\"/repos/\" + this.repo + \"/issues/\" + this.number, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Issue info error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Issue.prototype.update = function(obj, cb) {\n      return this.client.patch(\"/repos/\" + this.repo + \"/issues/\" + this.number, obj, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Issue update error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Issue.prototype.comments = function() {\n      var cb, i, params, ref;\n      params = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), cb = arguments[i++];\n      return (ref = this.client).get.apply(ref, [\"/repos/\" + this.repo + \"/issues/\" + this.number + \"/comments\"].concat(slice.call(params), [function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Issue Comments error'));\n        } else {\n          return cb(null, b, h);\n        }\n      }]));\n    };\n\n    Issue.prototype.createComment = function(comment, cb) {\n      return this.client.post(\"/repos/\" + this.repo + \"/issues/\" + this.number + \"/comments\", comment, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 201) {\n          return cb(new Error('Issue createComment error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Issue.prototype.updateComment = function(id, comment, cb) {\n      return this.client.patch(\"/repos/\" + this.repo + \"/issues/comments/\" + id, comment, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Issue updateComment error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Issue.prototype.deleteComment = function(id, cb) {\n      return this.client.del(\"/repos/\" + this.repo + \"/issues/comments/\" + id, {}, (function(_this) {\n        return function(err, s, b, h) {\n          if (err) {\n            return cb(err);\n          }\n          if (s !== 204) {\n            return cb(new Error(\"Issue deleteComment error\"));\n          } else {\n            return cb(null, b, h);\n          }\n        };\n      })(this));\n    };\n\n    Issue.prototype.labels = function(cb) {\n      return this.client.get(\"/repos/\" + this.repo + \"/issues/\" + this.number + \"/labels\", {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Issue labels error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Issue.prototype.addLabels = function(labels, cb) {\n      return this.client.post(\"/repos/\" + this.repo + \"/issues/\" + this.number + \"/labels\", labels, (function(_this) {\n        return function(err, s, b, h) {\n          if (err) {\n            return cb(err);\n          }\n          if (s !== 200) {\n            return cb(new Error(\"Issue addLabels error\"));\n          } else {\n            return cb(null, b, h);\n          }\n        };\n      })(this));\n    };\n\n    Issue.prototype.replaceAllLabels = function(labels, cb) {\n      return this.client.put(\"/repos/\" + this.repo + \"/issues/\" + this.number + \"/labels\", labels, (function(_this) {\n        return function(err, s, b, h) {\n          if (err) {\n            return cb(err);\n          }\n          if (s !== 200) {\n            return cb(new Error(\"Issue replaceLabels error\"));\n          } else {\n            return cb(null, b, h);\n          }\n        };\n      })(this));\n    };\n\n    Issue.prototype.removeLabel = function(label, cb) {\n      return this.client.del(encodeURI(\"/repos/\" + this.repo + \"/issues/\" + this.number + \"/labels/\" + label), {}, (function(_this) {\n        return function(err, s, b, h) {\n          if (err) {\n            return cb(err);\n          }\n          if (s !== 200) {\n            return cb(new Error(\"Issue removeLabel error\"));\n          } else {\n            return cb(null, b, h);\n          }\n        };\n      })(this));\n    };\n\n    Issue.prototype.removeAllLabels = function(cb) {\n      return this.client.del(\"/repos/\" + this.repo + \"/issues/\" + this.number + \"/labels\", {}, (function(_this) {\n        return function(err, s, b, h) {\n          if (err) {\n            return cb(err);\n          }\n          if (s !== 204) {\n            return cb(new Error(\"Issue removeAllLabels error\"));\n          } else {\n            return cb(null, b, h);\n          }\n        };\n      })(this));\n    };\n\n    return Issue;\n\n  })();\n\n  module.exports = Issue;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/milestone.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Milestone;\n\n  Milestone = (function() {\n    function Milestone(repo, number, client) {\n      this.repo = repo;\n      this.number = number;\n      this.client = client;\n    }\n\n    Milestone.prototype.info = function(cb) {\n      return this.client.get(\"/repos/\" + this.repo + \"/milestones/\" + this.number, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Milestone info error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Milestone.prototype.update = function(obj, cb) {\n      return this.client.post(\"/repos/\" + this.repo + \"/milestones/\" + this.number, obj, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Milestone update error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Milestone.prototype[\"delete\"] = function(cb) {\n      return this.client.del(\"/repos/\" + this.repo + \"/milestones/\" + this.number, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Milestone delete error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    return Milestone;\n\n  })();\n\n  module.exports = Milestone;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/label.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Label;\n\n  Label = (function() {\n    function Label(repo, name, client) {\n      this.repo = repo;\n      this.name = name;\n      this.client = client;\n    }\n\n    Label.prototype.info = function(cb) {\n      return this.client.get(encodeURI(\"/repos/\" + this.repo + \"/labels/\" + this.name), function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Label info error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Label.prototype.update = function(obj, cb) {\n      return this.client.post(\"/repos/\" + this.repo + \"/labels/\" + this.name, obj, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Label update error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Label.prototype[\"delete\"] = function(cb) {\n      return this.client.del(encodeURI(\"/repos/\" + this.repo + \"/labels/\" + this.name), {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Label delete error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    return Label;\n\n  })();\n\n  module.exports = Label;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/notification.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Notification;\n\n  Notification = (function() {\n    function Notification(id, client) {\n      this.id = id;\n      this.client = client;\n    }\n\n    Notification.prototype.markAsRead = function(cb) {\n      return this.client.post(\"/notifications/threads/\" + this.id, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 205) {\n          return cb(new Error('Notification mark as read error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Notification.prototype.unsubscribe = function(cb) {\n      return this.client.del(\"/notifications/threads/\" + this.id + \"/subscription\", {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error('User mute error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Notification.prototype.subscribe = function(cb) {\n      var options;\n      options = {\n        subscribed: true,\n        ignored: false\n      };\n      return this.client.put(\"/notifications/threads/\" + this.id + \"/subscription\", options, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User unmute error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Notification.prototype.mute = function(cb) {\n      var options;\n      options = {\n        subscribed: false,\n        ignored: true\n      };\n      return this.client.put(\"/notifications/threads/\" + this.id + \"/subscription\", options, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('User ignore error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    return Notification;\n\n  })();\n\n  module.exports = Notification;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/search.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Search;\n\n  Search = (function() {\n    function Search(client) {\n      this.client = client;\n    }\n\n    Search.prototype.issues = function(params, cb) {\n      return this.client.get(\"/search/issues\", params, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Search issues error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Search.prototype.repos = function(params, cb) {\n      return this.client.get(\"/search/repositories\", params, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Search repos error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Search.prototype.users = function(params, cb) {\n      return this.client.get(\"/search/users\", params, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Search users error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Search.prototype.code = function(params, cb) {\n      return this.client.get(\"/search/code\", params, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error('Search email error'));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    return Search;\n\n  })();\n\n  module.exports = Search;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-octonode/node_modules/octonode/lib/octonode/project.js":"// Generated by CoffeeScript 1.12.5\n(function() {\n  var Project;\n\n  Project = (function() {\n    function Project(repo, number, client) {\n      this.repo = repo;\n      this.number = number;\n      this.client = client;\n    }\n\n    Project.prototype.info = function(cb) {\n      return this.client.get(\"/repos/\" + this.repo + \"/projects/\" + this.number, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Project info error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Project.prototype.update = function(obj, cb) {\n      return this.client.post(\"/repos/\" + this.repo + \"/projects/\" + this.number, obj, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 200) {\n          return cb(new Error(\"Project update error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    Project.prototype[\"delete\"] = function(cb) {\n      return this.client.del(\"/repos/\" + this.repo + \"/projects/\" + this.number, {}, function(err, s, b, h) {\n        if (err) {\n          return cb(err);\n        }\n        if (s !== 204) {\n          return cb(new Error(\"Project delete error\"));\n        } else {\n          return cb(null, b, h);\n        }\n      });\n    };\n\n    return Project;\n\n  })();\n\n  module.exports = Project;\n\n}).call(this);\n"}